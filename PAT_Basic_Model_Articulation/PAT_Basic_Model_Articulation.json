{
  "analysis": {
    "display_name": "PAT_Basic_Model_Articulation",
    "name": "PAT_Basic_Model_Articulation",
    "output_variables": [],
    "problem": {
      "workflow": [
        {
          "name": "change_building_location",
          "display_name": "ChangeBuildingLocation",
          "measure_type": "RubyMeasure",
          "measure_definition_class_name": "ChangeBuildingLocation",
          "measure_definition_directory": "./measures/ChangeBuildingLocation",
          "measure_definition_directory_local": "/Users/dgoldwas/Documents/GitHub/Personal/PAT_projects/PAT_Basic_Model_Articulation/measures/ChangeBuildingLocation",
          "measure_definition_display_name": "ChangeBuildingLocation",
          "measure_definition_name": "change_building_location",
          "measure_definition_name_xml": null,
          "measure_definition_uuid": "d4db4971-f5ba-11e3-a3ac-0800200c9a66",
          "measure_definition_version_uuid": "04d1e937-c0da-4e99-b815-fca47baaeac5",
          "uuid": "d4db4971-f5ba-11e3-a3ac-0800200c9a66",
          "version_uuid": "04d1e937-c0da-4e99-b815-fca47baaeac5",
          "description": "Change the building location",
          "taxonomy": "Whole Building.Space Types",
          "arguments": [
            {
              "display_name": "Climate Zone.",
              "display_name_short": "climate_zone",
              "name": "climate_zone",
              "value_type": "string",
              "default_value": "Lookup From Stat File",
              "value": "Lookup From Stat File"
            }
          ],
          "variables": [
            {
              "argument": {
                "display_name": "Weather File Name",
                "display_name_short": "weather_file_name",
                "name": "weather_file_name",
                "value_type": "string",
                "default_value": "USA_GA_Atlanta-Hartsfield-Jackson.Intl.AP.722190_TMY3.epw",
                "value": "USA_GA_Atlanta-Hartsfield-Jackson.Intl.AP.722190_TMY3.epw"
              },
              "display_name": "Weather File Name",
              "display_name_short": "Weather File Name",
              "variable_type": "variable",
              "units": "",
              "minimum": "USA_CO_Aurora-Buckley.Field.ANGB.724695_TMY3.epw",
              "maximum": "USA_GA_Atlanta-Hartsfield-Jackson.Intl.AP.722190_TMY3.epw",
              "relation_to_output": null,
              "static_value": "USA_GA_Atlanta-Hartsfield-Jackson.Intl.AP.722190_TMY3.epw",
              "uuid": "",
              "version_uuid": "",
              "variable": true,
              "uncertainty_description": {
                "type": "discrete",
                "attributes": [
                  {
                    "name": "discrete",
                    "values_and_weights": [
                      {
                        "value": "USA_GA_Atlanta-Hartsfield-Jackson.Intl.AP.722190_TMY3.epw",
                        "weight": 0.5
                      },
                      {
                        "value": "USA_CO_Aurora-Buckley.Field.ANGB.724695_TMY3.epw",
                        "weight": 0.5
                      }
                    ]
                  },
                  {
                    "name": "lower_bounds",
                    "value": "USA_CO_Aurora-Buckley.Field.ANGB.724695_TMY3.epw"
                  },
                  {
                    "name": "upper_bounds",
                    "value": "USA_GA_Atlanta-Hartsfield-Jackson.Intl.AP.722190_TMY3.epw"
                  },
                  {
                    "name": "modes",
                    "value": null
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "stddev",
                    "value": null
                  }
                ]
              },
              "workflow_index": 0
            }
          ],
          "workflow_index": 0
        },
        {
          "name": "create_bar_from_building_type_ratios",
          "display_name": "Create Bar From Building Type Ratios",
          "measure_type": "RubyMeasure",
          "measure_definition_class_name": "CreateBarFromBuildingTypeRatios",
          "measure_definition_directory": "./measures/create_bar_from_building_type_ratios",
          "measure_definition_directory_local": "/Users/dgoldwas/Documents/GitHub/Personal/PAT_projects/PAT_Basic_Model_Articulation/measures/create_bar_from_building_type_ratios",
          "measure_definition_display_name": "Create Bar From Building Type Ratios",
          "measure_definition_name": "create_bar_from_building_type_ratios",
          "measure_definition_name_xml": null,
          "measure_definition_uuid": "6e3a14f8-c3c7-4e03-bc51-bef8a52e1a05",
          "measure_definition_version_uuid": "b8a78d3b-95ad-4391-a1d0-9a3ecce1003c",
          "uuid": "6e3a14f8-c3c7-4e03-bc51-bef8a52e1a05",
          "version_uuid": "b8a78d3b-95ad-4391-a1d0-9a3ecce1003c",
          "description": "Create a core and perimeter bar sliced by space type.",
          "taxonomy": "Envelope.Form",
          "arguments": [
            {
              "display_name": "Primary Building Type Number of Units",
              "display_name_short": "bldg_type_a_num_units",
              "name": "bldg_type_a_num_units",
              "value_type": "integer",
              "default_value": 1,
              "value": 1
            },
            {
              "display_name": "Building Type B",
              "display_name_short": "bldg_type_b",
              "name": "bldg_type_b",
              "value_type": "string",
              "default_value": "SmallOffice",
              "value": "SmallOffice"
            },
            {
              "display_name": "Building Type B Fraction of Building Floor Area",
              "display_name_short": "bldg_type_b_fract_bldg_area",
              "name": "bldg_type_b_fract_bldg_area",
              "value_type": "double",
              "default_value": 0,
              "value": 0
            },
            {
              "display_name": "Building Type B Number of Units",
              "display_name_short": "bldg_type_b_num_units",
              "name": "bldg_type_b_num_units",
              "value_type": "integer",
              "default_value": 1,
              "value": 1
            },
            {
              "display_name": "Building Type C",
              "display_name_short": "bldg_type_c",
              "name": "bldg_type_c",
              "value_type": "string",
              "default_value": "SmallOffice",
              "value": "SmallOffice"
            },
            {
              "display_name": "Building Type C Fraction of Building Floor Area",
              "display_name_short": "bldg_type_c_fract_bldg_area",
              "name": "bldg_type_c_fract_bldg_area",
              "value_type": "double",
              "default_value": 0,
              "value": 0
            },
            {
              "display_name": "Building Type C Number of Units",
              "display_name_short": "bldg_type_c_num_units",
              "name": "bldg_type_c_num_units",
              "value_type": "integer",
              "default_value": 1,
              "value": 1
            },
            {
              "display_name": "Building Type D",
              "display_name_short": "bldg_type_d",
              "name": "bldg_type_d",
              "value_type": "string",
              "default_value": "SmallOffice",
              "value": "SmallOffice"
            },
            {
              "display_name": "Building Type D Fraction of Building Floor Area",
              "display_name_short": "bldg_type_d_fract_bldg_area",
              "name": "bldg_type_d_fract_bldg_area",
              "value_type": "double",
              "default_value": 0,
              "value": 0
            },
            {
              "display_name": "Building Type D Number of Units",
              "display_name_short": "bldg_type_d_num_units",
              "name": "bldg_type_d_num_units",
              "value_type": "integer",
              "default_value": 1,
              "value": 1
            },
            {
              "display_name": "Single Floor Area",
              "display_name_short": "single_floor_area",
              "name": "single_floor_area",
              "value_type": "double",
              "default_value": 0,
              "value": 0
            },
            {
              "display_name": "Typical Floor to FLoor Height",
              "display_name_short": "floor_height",
              "name": "floor_height",
              "value_type": "double",
              "default_value": 0,
              "value": 0
            },
            {
              "display_name": "Building Rotation",
              "display_name_short": "building_rotation",
              "name": "building_rotation",
              "value_type": "double",
              "default_value": 0,
              "value": 0
            },
            {
              "display_name": "Target Standard",
              "display_name_short": "template",
              "name": "template",
              "value_type": "string",
              "default_value": "90.1-2004",
              "value": "90.1-2004"
            },
            {
              "display_name": "Window to Wall Ratio.",
              "display_name_short": "wwr",
              "name": "wwr",
              "value_type": "double",
              "default_value": 0,
              "value": 0
            },
            {
              "display_name": "Fraction of Exterior Wall Area with Adjacent Structure",
              "display_name_short": "party_wall_fraction",
              "name": "party_wall_fraction",
              "value_type": "double",
              "default_value": 0,
              "value": 0
            },
            {
              "display_name": "Number of North facing stories with party wall",
              "display_name_short": "party_wall_stories_north",
              "name": "party_wall_stories_north",
              "value_type": "integer",
              "default_value": 0,
              "value": 0
            },
            {
              "display_name": "Number of South facing stories with party wall",
              "display_name_short": "party_wall_stories_south",
              "name": "party_wall_stories_south",
              "value_type": "integer",
              "default_value": 0,
              "value": 0
            },
            {
              "display_name": "Number of West facing stories with party wall",
              "display_name_short": "party_wall_stories_west",
              "name": "party_wall_stories_west",
              "value_type": "integer",
              "default_value": 0,
              "value": 0
            },
            {
              "display_name": "Is the Bottom Story Exposed to Ground?",
              "display_name_short": "bottom_story_ground_exposed_floor",
              "name": "bottom_story_ground_exposed_floor",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Is the Top Story an Exterior Roof?",
              "display_name_short": "top_story_exterior_exposed_roof",
              "name": "top_story_exterior_exposed_roof",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Calculation Method for Story Multiplier",
              "display_name_short": "story_multiplier",
              "name": "story_multiplier",
              "value_type": "string",
              "default_value": "Basements Ground Mid Top",
              "value": "Basements Ground Mid Top"
            },
            {
              "display_name": "Division Method for Bar Space Types.",
              "display_name_short": "bar_division_method",
              "name": "bar_division_method",
              "value_type": "string",
              "default_value": "Multiple Space Types - Individual Stories Sliced",
              "value": "Multiple Space Types - Individual Stories Sliced"
            },
            {
              "display_name": "Make Mid Story Floor Surfaces Adibatic",
              "display_name_short": "make_mid_story_surfaces_adiabatic",
              "name": "make_mid_story_surfaces_adiabatic",
              "value_type": "boolean",
              "default_value": false,
              "value": false
            }
          ],
          "variables": [
            {
              "argument": {
                "display_name": "Primary Building Type",
                "display_name_short": "bldg_type_a",
                "name": "bldg_type_a",
                "value_type": "string",
                "default_value": "SmallOffice",
                "value": "LargeHotel",
                "choice_display_names": [
                  "SecondarySchool",
                  "PrimarySchool",
                  "SmallOffice",
                  "MediumOffice",
                  "LargeOffice",
                  "SmallHotel",
                  "LargeHotel",
                  "Warehouse",
                  "RetailStandalone",
                  "RetailStripmall",
                  "QuickServiceRestaurant",
                  "FullServiceRestaurant",
                  "MidriseApartment",
                  "HighriseApartment",
                  "Hospital",
                  "Outpatient",
                  "SuperMarket"
                ]
              },
              "display_name": "Primary Building Type",
              "display_name_short": "Primary Building Type",
              "variable_type": "variable",
              "units": "",
              "minimum": "LargeHotel",
              "maximum": "MediumOffice",
              "relation_to_output": null,
              "static_value": "LargeHotel",
              "uuid": "",
              "version_uuid": "",
              "variable": true,
              "uncertainty_description": {
                "type": "discrete",
                "attributes": [
                  {
                    "name": "discrete",
                    "values_and_weights": [
                      {
                        "value": "LargeHotel",
                        "weight": 0.5
                      },
                      {
                        "value": "MediumOffice",
                        "weight": 0.5
                      }
                    ]
                  },
                  {
                    "name": "lower_bounds",
                    "value": "LargeHotel"
                  },
                  {
                    "name": "upper_bounds",
                    "value": "MediumOffice"
                  },
                  {
                    "name": "modes",
                    "value": null
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "stddev",
                    "value": null
                  }
                ]
              },
              "workflow_index": 0
            },
            {
              "argument": {
                "display_name": "Total Building Floor Area",
                "display_name_short": "total_bldg_floor_area",
                "name": "total_bldg_floor_area",
                "value_type": "double",
                "default_value": 10000,
                "value": 100000
              },
              "display_name": "Total Building Floor Area",
              "display_name_short": "Total Building Floor Area",
              "variable_type": "variable",
              "units": "",
              "minimum": 20000,
              "maximum": 100000,
              "relation_to_output": null,
              "static_value": 100000,
              "uuid": "",
              "version_uuid": "",
              "variable": true,
              "uncertainty_description": {
                "type": "discrete",
                "attributes": [
                  {
                    "name": "discrete",
                    "values_and_weights": [
                      {
                        "value": 100000,
                        "weight": 0.5
                      },
                      {
                        "value": 20000,
                        "weight": 0.5
                      }
                    ]
                  },
                  {
                    "name": "lower_bounds",
                    "value": 20000
                  },
                  {
                    "name": "upper_bounds",
                    "value": 100000
                  },
                  {
                    "name": "modes",
                    "value": 100000
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "stddev",
                    "value": null
                  }
                ]
              },
              "workflow_index": 1
            },
            {
              "argument": {
                "display_name": "Number of Stories Above Grade",
                "display_name_short": "num_stories_above_grade",
                "name": "num_stories_above_grade",
                "value_type": "double",
                "default_value": 1,
                "value": 10
              },
              "display_name": "Number of Stories Above Grade",
              "display_name_short": "Number of Stories Above Grade",
              "variable_type": "variable",
              "units": "",
              "minimum": 3,
              "maximum": 10,
              "relation_to_output": null,
              "static_value": 10,
              "uuid": "",
              "version_uuid": "",
              "variable": true,
              "uncertainty_description": {
                "type": "discrete",
                "attributes": [
                  {
                    "name": "discrete",
                    "values_and_weights": [
                      {
                        "value": 10,
                        "weight": 0.5
                      },
                      {
                        "value": 3,
                        "weight": 0.5
                      }
                    ]
                  },
                  {
                    "name": "lower_bounds",
                    "value": 3
                  },
                  {
                    "name": "upper_bounds",
                    "value": 10
                  },
                  {
                    "name": "modes",
                    "value": 10
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "stddev",
                    "value": null
                  }
                ]
              },
              "workflow_index": 2
            },
            {
              "argument": {
                "display_name": "Number of Stories Below Grade",
                "display_name_short": "num_stories_below_grade",
                "name": "num_stories_below_grade",
                "value_type": "integer",
                "default_value": 0,
                "value": 1
              },
              "display_name": "Number of Stories Below Grade",
              "display_name_short": "Number of Stories Below Grade",
              "variable_type": "variable",
              "units": "",
              "minimum": 0,
              "maximum": 1,
              "relation_to_output": null,
              "static_value": 1,
              "uuid": "",
              "version_uuid": "",
              "variable": true,
              "uncertainty_description": {
                "type": "discrete",
                "attributes": [
                  {
                    "name": "discrete",
                    "values_and_weights": [
                      {
                        "value": 1,
                        "weight": 0.5
                      },
                      {
                        "value": 0,
                        "weight": 0.5
                      }
                    ]
                  },
                  {
                    "name": "lower_bounds",
                    "value": 0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 1
                  },
                  {
                    "name": "modes",
                    "value": 1
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "stddev",
                    "value": null
                  }
                ]
              },
              "workflow_index": 3
            },
            {
              "argument": {
                "display_name": "Ratio of North/South Facade Length Relative to East/West Facade Length.",
                "display_name_short": "ns_to_ew_ratio",
                "name": "ns_to_ew_ratio",
                "value_type": "double",
                "default_value": 0,
                "value": 3
              },
              "display_name": "Ratio of North/South Facade Length Relative to East/West Facade Length.",
              "display_name_short": "Ratio of North/South Facade Length Relative to East/West Facade Length.",
              "variable_type": "variable",
              "units": "",
              "minimum": 0,
              "maximum": 3,
              "relation_to_output": null,
              "static_value": 3,
              "uuid": "",
              "version_uuid": "",
              "variable": true,
              "uncertainty_description": {
                "type": "discrete",
                "attributes": [
                  {
                    "name": "discrete",
                    "values_and_weights": [
                      {
                        "value": 3,
                        "weight": 0.5
                      },
                      {
                        "value": 0,
                        "weight": 0.5
                      }
                    ]
                  },
                  {
                    "name": "lower_bounds",
                    "value": 0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 3
                  },
                  {
                    "name": "modes",
                    "value": 3
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "stddev",
                    "value": null
                  }
                ]
              },
              "workflow_index": 4
            },
            {
              "argument": {
                "display_name": "Number of East facing stories with party wall",
                "display_name_short": "party_wall_stories_east",
                "name": "party_wall_stories_east",
                "value_type": "integer",
                "default_value": 0,
                "value": 4
              },
              "display_name": "Number of East facing stories with party wall",
              "display_name_short": "Number of East facing stories with party wall",
              "variable_type": "variable",
              "units": "",
              "minimum": 0,
              "maximum": 4,
              "relation_to_output": null,
              "static_value": 4,
              "uuid": "",
              "version_uuid": "",
              "variable": true,
              "uncertainty_description": {
                "type": "discrete",
                "attributes": [
                  {
                    "name": "discrete",
                    "values_and_weights": [
                      {
                        "value": 4,
                        "weight": 0.5
                      },
                      {
                        "value": 0,
                        "weight": 0.5
                      }
                    ]
                  },
                  {
                    "name": "lower_bounds",
                    "value": 0
                  },
                  {
                    "name": "upper_bounds",
                    "value": 4
                  },
                  {
                    "name": "modes",
                    "value": 4
                  },
                  {
                    "name": "delta_x",
                    "value": null
                  },
                  {
                    "name": "stddev",
                    "value": null
                  }
                ]
              },
              "workflow_index": 5
            }
          ],
          "workflow_index": 1
        },
        {
          "name": "create_typical_building_from_model",
          "display_name": "Create Typical Building from Model",
          "measure_type": "RubyMeasure",
          "measure_definition_class_name": "CreateTypicalBuildingFromModel",
          "measure_definition_directory": "./measures/create_typical_building_from_model",
          "measure_definition_directory_local": "/Users/dgoldwas/Documents/GitHub/Personal/PAT_projects/PAT_Basic_Model_Articulation/measures/create_typical_building_from_model",
          "measure_definition_display_name": "Create Typical Building from Model",
          "measure_definition_name": "create_typical_building_from_model",
          "measure_definition_name_xml": null,
          "measure_definition_uuid": "339a2e3a-273c-4494-bb50-bfe586a0647c",
          "measure_definition_version_uuid": "833d646a-1391-4e85-9083-77d64ed7c2dd",
          "uuid": "339a2e3a-273c-4494-bb50-bfe586a0647c",
          "version_uuid": "833d646a-1391-4e85-9083-77d64ed7c2dd",
          "description": "Takes a model with space and stub space types, and assigns constructions, schedules, internal loads, hvac, and other loads such as exterior lights and service water heating. The end result is somewhat like a custom protptye model with user geometry, but it may use different HVAC systems.",
          "taxonomy": "Whole Building.Space Types",
          "arguments": [
            {
              "display_name": "Target Standard",
              "display_name_short": "template",
              "name": "template",
              "value_type": "string",
              "default_value": "90.1-2010",
              "value": "90.1-2004"
            },
            {
              "display_name": "HVAC System Type",
              "display_name_short": "system_type",
              "name": "system_type",
              "value_type": "string",
              "default_value": "Inferred",
              "value": "Inferred"
            },
            {
              "display_name": "HVAC System Delivery Type",
              "display_name_short": "hvac_delivery_type",
              "name": "hvac_delivery_type",
              "value_type": "string",
              "default_value": "Forced Air",
              "value": "Forced Air"
            },
            {
              "display_name": "HVAC Heating Source",
              "display_name_short": "htg_src",
              "name": "htg_src",
              "value_type": "string",
              "default_value": "NaturalGas",
              "value": "NaturalGas"
            },
            {
              "display_name": "HVAC Cooling Source",
              "display_name_short": "clg_src",
              "name": "clg_src",
              "value_type": "string",
              "default_value": "Electricity",
              "value": "Electricity"
            },
            {
              "display_name": "Kitchen Exhaust MakeUp Air Calculation Method",
              "display_name_short": "kitchen_makeup",
              "name": "kitchen_makeup",
              "value_type": "string",
              "default_value": "Adjacent",
              "value": "Adjacent"
            },
            {
              "display_name": "Exterior Lighting Zone",
              "display_name_short": "exterior_lighting_zone",
              "name": "exterior_lighting_zone",
              "value_type": "string",
              "default_value": "3 - All Other Areas",
              "value": "3 - All Other Areas"
            },
            {
              "display_name": "Add Constructions to Model",
              "display_name_short": "add_constructions",
              "name": "add_constructions",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Add Space Type Loads to Model",
              "display_name_short": "add_space_type_loads",
              "name": "add_space_type_loads",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Add Elevators to Model",
              "display_name_short": "add_elevators",
              "name": "add_elevators",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Add Exterior Lights to Model",
              "display_name_short": "add_exterior_lights",
              "name": "add_exterior_lights",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Onsite Parking Fraction",
              "display_name_short": "onsite_parking_fraction",
              "name": "onsite_parking_fraction",
              "value_type": "double",
              "default_value": 1,
              "value": 1
            },
            {
              "display_name": "Add Exhaust Fans to Model",
              "display_name_short": "add_exhaust",
              "name": "add_exhaust",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Add Service Water Heating to Model",
              "display_name_short": "add_swh",
              "name": "add_swh",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Add Thermostats",
              "display_name_short": "add_thermostat",
              "name": "add_thermostat",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Add HVAC System to Model",
              "display_name_short": "add_hvac",
              "name": "add_hvac",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Clean Model of non-gemoetry objects",
              "display_name_short": "remove_objects",
              "name": "remove_objects",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            }
          ],
          "variables": [],
          "workflow_index": 2
        },
        {
          "name": "view_model",
          "display_name": "ViewModel",
          "measure_type": "RubyMeasure",
          "measure_definition_class_name": "ViewModel",
          "measure_definition_directory": "./measures/78db3ab6-ad89-4d66-9140-e6f1c1a2a5d0",
          "measure_definition_directory_local": "/Users/dgoldwas/Documents/GitHub/Personal/PAT_projects/PAT_Basic_Model_Articulation/measures/78db3ab6-ad89-4d66-9140-e6f1c1a2a5d0",
          "measure_definition_display_name": "ViewModel",
          "measure_definition_name": "view_model",
          "measure_definition_name_xml": null,
          "measure_definition_uuid": "f4669f10-fda5-489d-8e1c-7ca3c2d40378",
          "measure_definition_version_uuid": "464c947a-3789-4984-bf52-0f5aaf8e6f1f",
          "uuid": "f4669f10-fda5-489d-8e1c-7ca3c2d40378",
          "version_uuid": "464c947a-3789-4984-bf52-0f5aaf8e6f1f",
          "description": "Visualize an OpenStudio model in a web based viewer",
          "taxonomy": "Reporting.QAQC",
          "arguments": [],
          "variables": [],
          "workflow_index": 3
        },
        {
          "name": "tariff_selection_generic",
          "display_name": " Tariff Selection-Generic",
          "measure_type": "EnergyPlusMeasure",
          "measure_definition_class_name": "TariffSelectionGeneric",
          "measure_definition_directory": "./measures/tariff_selection_generic",
          "measure_definition_directory_local": "/Users/dgoldwas/Documents/GitHub/Personal/PAT_projects/PAT_Basic_Model_Articulation/measures/tariff_selection_generic",
          "measure_definition_display_name": " Tariff Selection-Generic",
          "measure_definition_name": "tariff_selection_generic",
          "measure_definition_name_xml": null,
          "measure_definition_uuid": "d65ae535-f0ea-4745-9f5b-8d42c7070741",
          "measure_definition_version_uuid": "f51def40-c03d-44d9-b7c7-fff868ebb41f",
          "uuid": "d65ae535-f0ea-4745-9f5b-8d42c7070741",
          "version_uuid": "f51def40-c03d-44d9-b7c7-fff868ebb41f",
          "description": "This measure creates tariff objets from pre-poulated IDF files in the measures \"resoruces\" directory.",
          "taxonomy": "Economics.Life Cycle Cost Analysis",
          "arguments": [
            {
              "display_name": "Select a Tariff for ElectricityPurchased:Facility.",
              "display_name_short": "ElectricityPurchased:Facility",
              "name": "ElectricityPurchased:Facility",
              "value_type": "string",
              "default_value": "Example_A",
              "value": "Example_A"
            },
            {
              "display_name": "Select a Tariff for Gas:Facility.",
              "display_name_short": "Gas:Facility",
              "name": "Gas:Facility",
              "value_type": "string",
              "default_value": "FlatEnergyCharge-Gas",
              "value": "FlatEnergyCharge-Gas"
            }
          ],
          "variables": [],
          "workflow_index": 4
        },
        {
          "name": "openstudio_results",
          "display_name": "OpenStudio Results",
          "measure_type": "ReportingMeasure",
          "measure_definition_class_name": "OpenStudioResults",
          "measure_definition_directory": "./measures/openstudio_results",
          "measure_definition_directory_local": "/Users/dgoldwas/Documents/GitHub/Personal/PAT_projects/PAT_Basic_Model_Articulation/measures/openstudio_results",
          "measure_definition_display_name": "OpenStudio Results",
          "measure_definition_name": "openstudio_results",
          "measure_definition_name_xml": null,
          "measure_definition_uuid": "a25386cd-60e4-46bc-8b11-c755f379d916",
          "measure_definition_version_uuid": "f538a5bb-0ea0-49c6-be0b-e206a840f207",
          "uuid": "a25386cd-60e4-46bc-8b11-c755f379d916",
          "version_uuid": "f538a5bb-0ea0-49c6-be0b-e206a840f207",
          "description": "This measure creates high level tables and charts pulling both from model inputs and EnergyPlus results. It has building level information as well as detail on space types, thermal zones, HVAC systems, envelope characteristics, and economics. Click the heading above a chart to view a table of the chart data.",
          "taxonomy": "Reporting.QAQC",
          "arguments": [
            {
              "display_name": "Model Summary",
              "display_name_short": "building_summary_section",
              "name": "building_summary_section",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Annual Overview",
              "display_name_short": "annual_overview_section",
              "name": "annual_overview_section",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Monthly Overview",
              "display_name_short": "monthly_overview_section",
              "name": "monthly_overview_section",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Utility Bills/Rates",
              "display_name_short": "utility_bills_rates_section",
              "name": "utility_bills_rates_section",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Envelope",
              "display_name_short": "envelope_section_section",
              "name": "envelope_section_section",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Space Type Breakdown",
              "display_name_short": "space_type_breakdown_section",
              "name": "space_type_breakdown_section",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Space Type Summary",
              "display_name_short": "space_type_details_section",
              "name": "space_type_details_section",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Interior Lighting Summary",
              "display_name_short": "interior_lighting_section",
              "name": "interior_lighting_section",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Plug Loads Summary",
              "display_name_short": "plug_loads_section",
              "name": "plug_loads_section",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Exterior Lighting",
              "display_name_short": "exterior_light_section",
              "name": "exterior_light_section",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Water Use Equipment",
              "display_name_short": "water_use_section",
              "name": "water_use_section",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "HVAC Load Profiles",
              "display_name_short": "hvac_load_profile",
              "name": "hvac_load_profile",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Zone Conditions",
              "display_name_short": "zone_condition_section",
              "name": "zone_condition_section",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Zone Overview",
              "display_name_short": "zone_summary_section",
              "name": "zone_summary_section",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Zone Equipment Detail",
              "display_name_short": "zone_equipment_detail_section",
              "name": "zone_equipment_detail_section",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Air Loops Detail",
              "display_name_short": "air_loops_detail_section",
              "name": "air_loops_detail_section",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Plant Loops Detail",
              "display_name_short": "plant_loops_detail_section",
              "name": "plant_loops_detail_section",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Outdoor Air",
              "display_name_short": "outdoor_air_section",
              "name": "outdoor_air_section",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Cash Flow",
              "display_name_short": "cost_summary_section",
              "name": "cost_summary_section",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Site and Source Summary",
              "display_name_short": "source_energy_section",
              "name": "source_energy_section",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            },
            {
              "display_name": "Schedule Overview",
              "display_name_short": "schedules_overview_section",
              "name": "schedules_overview_section",
              "value_type": "boolean",
              "default_value": true,
              "value": true
            }
          ],
          "variables": [],
          "workflow_index": 5
        }
      ],
      "algorithm": {
        "objective_functions": []
      },
      "analysis_type": null,
      "design_alternatives": [
        {
          "name": "Alternative 1",
          "options": [
            {
              "measure_name": "change_building_location",
              "workflow_index": 0,
              "name": "ChangeBuildingLocation Atlanta",
              "description": "Option 1 Description: Change the building location"
            },
            {
              "measure_name": "create_bar_from_building_type_ratios",
              "workflow_index": 1,
              "name": "CreateBar LargeHotel",
              "description": "Option 1 Description: Create a core and perimeter bar sliced by space type."
            },
            {
              "measure_name": "create_typical_building_from_model",
              "workflow_index": 2,
              "name": "CreateTypicalModel",
              "description": "Option 1 Description: Takes a model with space and stub space types, and assigns constructions, schedules, internal loads, hvac, and other loads such as exterior lights and service water heating. The end result is somewhat like a custom protptye model with user geometry, but it may use different HVAC systems."
            },
            {
              "measure_name": "view_model",
              "workflow_index": 3,
              "name": "ViewModel",
              "description": "Option 1 Description: Visualize an OpenStudio model in a web based viewer"
            },
            {
              "measure_name": "tariff_selection_generic",
              "workflow_index": 4,
              "name": "Tariff",
              "description": "Option 1 Description: This measure creates tariff objets from pre-poulated IDF files in the measures \"resoruces\" directory."
            },
            {
              "measure_name": "openstudio_results",
              "workflow_index": 5,
              "name": "OpenStudio Results",
              "description": "Option 1 Description: This measure creates high level tables and charts pulling both from model inputs and EnergyPlus results. It has building level information as well as detail on space types, thermal zones, HVAC systems, envelope characteristics, and economics. Click the heading above a chart to view a table of the chart data."
            }
          ]
        },
        {
          "name": "Alternative 2",
          "options": [
            {
              "measure_name": "change_building_location",
              "workflow_index": 0,
              "name": "ChangeBuildingLocation Denver",
              "description": "Option 2 Description: Change the building location"
            },
            {
              "measure_name": "create_bar_from_building_type_ratios",
              "workflow_index": 1,
              "name": "CreateBar MediumOffice",
              "description": "Option 2 Description: Create a core and perimeter bar sliced by space type."
            },
            {
              "measure_name": "create_typical_building_from_model",
              "workflow_index": 2,
              "name": "CreateTypicalModel",
              "description": "Option 1 Description: Takes a model with space and stub space types, and assigns constructions, schedules, internal loads, hvac, and other loads such as exterior lights and service water heating. The end result is somewhat like a custom protptye model with user geometry, but it may use different HVAC systems."
            },
            {
              "measure_name": "view_model",
              "workflow_index": 3,
              "name": "ViewModel",
              "description": "Option 1 Description: Visualize an OpenStudio model in a web based viewer"
            },
            {
              "measure_name": "tariff_selection_generic",
              "workflow_index": 4,
              "name": "Tariff",
              "description": "Option 1 Description: This measure creates tariff objets from pre-poulated IDF files in the measures \"resoruces\" directory."
            },
            {
              "measure_name": "openstudio_results",
              "workflow_index": 5,
              "name": "OpenStudio Results",
              "description": "Option 1 Description: This measure creates high level tables and charts pulling both from model inputs and EnergyPlus results. It has building level information as well as detail on space types, thermal zones, HVAC systems, envelope characteristics, and economics. Click the heading above a chart to view a table of the chart data."
            }
          ]
        }
      ]
    },
    "seed": {
      "file_type": "OSM",
      "path": "./seeds/empty_seed.osm"
    },
    "weather_file": {
      "file_type": "EPW",
      "path": "./weather/USA_AK_Fairbanks.Intl.AP.702610_TMY3.epw"
    },
    "file_format_version": 1,
    "server_scripts": {}
  }
}